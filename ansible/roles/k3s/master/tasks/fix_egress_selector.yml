---
# Comprehensive fix for secondary masters
# This will fix all references to 127.0.0.1 in config files

- name: Find all k3s config files with 127.0.0.1 references
  shell: find /var/lib/rancher/k3s -type f \( -name "*.yaml" -o -name "*.json" -o -name "*.conf" \) -exec grep -l "127.0.0.1" {} \; || echo "No files found"
  register: ip_files
  changed_when: false

- name: Display files with 127.0.0.1 references
  debug:
    msg: "Files containing 127.0.0.1: {{ ip_files.stdout_lines }}"

- name: Fix files with 127.0.0.1 references
  replace:
    path: "{{ item }}"
    regexp: '127\.0\.0\.1'
    replace: '{{ hostvars[groups["k3s_master"][0]].ansible_host }}'
  with_items: "{{ ip_files.stdout_lines }}"
  when: ip_files.stdout != "No files found"
  register: files_fixed

# Handle specific files that might need special treatment

- name: Check for egress selector config file
  stat:
    path: /var/lib/rancher/k3s/server/etc/egress-selector-config.yaml
  register: egress_selector_file

- name: Read egress selector config
  slurp:
    path: /var/lib/rancher/k3s/server/etc/egress-selector-config.yaml
  register: egress_selector_content
  when: egress_selector_file.stat.exists

- name: Fix egress selector config URL (replace 127.0.0.1 with primary master IP)
  copy:
    content: "{{ egress_selector_content.content | b64decode | replace('https://127.0.0.1:6443', 'https://' + hostvars[groups['k3s_master'][0]].ansible_host + ':6443') | replace('127.0.0.1', hostvars[groups['k3s_master'][0]].ansible_host) }}"
    dest: /var/lib/rancher/k3s/server/etc/egress-selector-config.yaml
  register: egress_selector_fixed
  when: egress_selector_file.stat.exists and egress_selector_content.content is defined

# Always restart k3s service on secondary masters to ensure changes take effect
- name: Force restart k3s on secondary masters
  systemd:
    name: k3s
    state: restarted
    daemon_reload: true
  when: files_fixed.changed | default(false) or egress_selector_fixed.changed | default(false)

- name: Wait for k3s service to stabilize
  wait_for:
    timeout: 10
  when: files_fixed.changed | default(false) or egress_selector_fixed.changed | default(false)

- name: Check for dynamic cert file
  stat:
    path: /var/lib/rancher/k3s/server/tls/dynamic-cert.json
  register: dynamic_cert_file

- name: Read dynamic cert file
  slurp:
    path: /var/lib/rancher/k3s/server/tls/dynamic-cert.json
  register: dynamic_cert_content
  when: dynamic_cert_file.stat.exists

- name: Fix dynamic cert file (replace 127.0.0.1 with primary master IP)
  copy:
    content: "{{ dynamic_cert_content.content | b64decode | replace('127.0.0.1', hostvars[groups['k3s_master'][0]].ansible_host) }}"
    dest: /var/lib/rancher/k3s/server/tls/dynamic-cert.json
  register: dynamic_cert_fixed
  when: dynamic_cert_file.stat.exists and dynamic_cert_content.content is defined

- name: Find all config files with 127.0.0.1 references
  shell: find /var/lib/rancher/k3s -type f -name "*.yaml" -o -name "*.json" -o -name "*.conf" | xargs grep -l "127.0.0.1" || echo "No files found"
  register: ip_files
  changed_when: false

- name: Display files with 127.0.0.1
  debug:
    msg: "Files still containing 127.0.0.1: {{ ip_files.stdout_lines }}"

- name: Fix any remaining files with 127.0.0.1
  replace:
    path: "{{ item }}"
    regexp: '127\.0\.0\.1'
    replace: '{{ hostvars[groups["k3s_master"][0]].ansible_host }}'
  with_items: "{{ ip_files.stdout_lines }}"
  when: ip_files.stdout != "No files found"
  register: other_files_fixed
  ignore_errors: true

- name: Restart k3s service on secondary masters if files changed
  systemd:
    name: k3s
    state: restarted
  when: egress_selector_fixed.changed | default(false) or dynamic_cert_fixed.changed | default(false) or other_files_fixed.changed | default(false)
